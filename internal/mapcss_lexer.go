// Code generated from MapCSS.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 25, 255,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7,
	3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12,
	3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 7, 16, 118, 10, 16, 12, 16, 14, 16, 121,
	11, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 7, 17, 130, 10,
	17, 12, 17, 14, 17, 133, 11, 17, 3, 17, 3, 17, 3, 18, 6, 18, 138, 10, 18,
	13, 18, 14, 18, 139, 3, 19, 3, 19, 3, 19, 3, 20, 6, 20, 146, 10, 20, 13,
	20, 14, 20, 147, 3, 20, 7, 20, 151, 10, 20, 12, 20, 14, 20, 154, 11, 20,
	3, 20, 3, 20, 6, 20, 158, 10, 20, 13, 20, 14, 20, 159, 5, 20, 162, 10,
	20, 3, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23,
	3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 3,
	25, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26,
	3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 5, 27, 202, 10, 27, 3,
	28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 3, 28,
	3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3,
	30, 3, 30, 3, 31, 3, 31, 3, 31, 3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 32,
	3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3,
	33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 3, 33, 2, 2,
	34, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12,
	23, 2, 25, 2, 27, 2, 29, 2, 31, 13, 33, 14, 35, 15, 37, 16, 39, 17, 41,
	18, 43, 2, 45, 2, 47, 2, 49, 2, 51, 2, 53, 19, 55, 20, 57, 21, 59, 22,
	61, 23, 63, 24, 65, 25, 3, 2, 7, 5, 2, 11, 12, 14, 15, 34, 34, 6, 2, 34,
	35, 37, 93, 95, 128, 178, 178, 6, 2, 34, 40, 42, 93, 95, 128, 178, 178,
	3, 2, 50, 59, 5, 2, 50, 59, 67, 72, 99, 104, 2, 261, 2, 3, 3, 2, 2, 2,
	2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2,
	2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2,
	2, 2, 21, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2,
	2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 53, 3,
	2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61,
	3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 3, 67, 3, 2, 2, 2, 5,
	74, 3, 2, 2, 2, 7, 79, 3, 2, 2, 2, 9, 81, 3, 2, 2, 2, 11, 83, 3, 2, 2,
	2, 13, 89, 3, 2, 2, 2, 15, 93, 3, 2, 2, 2, 17, 95, 3, 2, 2, 2, 19, 97,
	3, 2, 2, 2, 21, 99, 3, 2, 2, 2, 23, 101, 3, 2, 2, 2, 25, 104, 3, 2, 2,
	2, 27, 106, 3, 2, 2, 2, 29, 109, 3, 2, 2, 2, 31, 112, 3, 2, 2, 2, 33, 124,
	3, 2, 2, 2, 35, 137, 3, 2, 2, 2, 37, 141, 3, 2, 2, 2, 39, 161, 3, 2, 2,
	2, 41, 163, 3, 2, 2, 2, 43, 166, 3, 2, 2, 2, 45, 168, 3, 2, 2, 2, 47, 173,
	3, 2, 2, 2, 49, 179, 3, 2, 2, 2, 51, 187, 3, 2, 2, 2, 53, 201, 3, 2, 2,
	2, 55, 203, 3, 2, 2, 2, 57, 216, 3, 2, 2, 2, 59, 221, 3, 2, 2, 2, 61, 226,
	3, 2, 2, 2, 63, 231, 3, 2, 2, 2, 65, 244, 3, 2, 2, 2, 67, 68, 7, 101, 2,
	2, 68, 69, 7, 99, 2, 2, 69, 70, 7, 112, 2, 2, 70, 71, 7, 120, 2, 2, 71,
	72, 7, 99, 2, 2, 72, 73, 7, 117, 2, 2, 73, 4, 3, 2, 2, 2, 74, 75, 7, 116,
	2, 2, 75, 76, 7, 105, 2, 2, 76, 77, 7, 100, 2, 2, 77, 78, 7, 42, 2, 2,
	78, 6, 3, 2, 2, 2, 79, 80, 7, 46, 2, 2, 80, 8, 3, 2, 2, 2, 81, 82, 7, 43,
	2, 2, 82, 10, 3, 2, 2, 2, 83, 84, 7, 116, 2, 2, 84, 85, 7, 105, 2, 2, 85,
	86, 7, 100, 2, 2, 86, 87, 7, 99, 2, 2, 87, 88, 7, 42, 2, 2, 88, 12, 3,
	2, 2, 2, 89, 90, 9, 2, 2, 2, 90, 91, 3, 2, 2, 2, 91, 92, 8, 7, 2, 2, 92,
	14, 3, 2, 2, 2, 93, 94, 7, 125, 2, 2, 94, 16, 3, 2, 2, 2, 95, 96, 7, 127,
	2, 2, 96, 18, 3, 2, 2, 2, 97, 98, 7, 60, 2, 2, 98, 20, 3, 2, 2, 2, 99,
	100, 7, 61, 2, 2, 100, 22, 3, 2, 2, 2, 101, 102, 7, 94, 2, 2, 102, 103,
	7, 94, 2, 2, 103, 24, 3, 2, 2, 2, 104, 105, 4, 130, 0, 2, 105, 26, 3, 2,
	2, 2, 106, 107, 7, 94, 2, 2, 107, 108, 7, 36, 2, 2, 108, 28, 3, 2, 2, 2,
	109, 110, 7, 94, 2, 2, 110, 111, 7, 41, 2, 2, 111, 30, 3, 2, 2, 2, 112,
	119, 7, 36, 2, 2, 113, 118, 9, 3, 2, 2, 114, 118, 5, 25, 13, 2, 115, 118,
	5, 27, 14, 2, 116, 118, 5, 23, 12, 2, 117, 113, 3, 2, 2, 2, 117, 114, 3,
	2, 2, 2, 117, 115, 3, 2, 2, 2, 117, 116, 3, 2, 2, 2, 118, 121, 3, 2, 2,
	2, 119, 117, 3, 2, 2, 2, 119, 120, 3, 2, 2, 2, 120, 122, 3, 2, 2, 2, 121,
	119, 3, 2, 2, 2, 122, 123, 7, 36, 2, 2, 123, 32, 3, 2, 2, 2, 124, 131,
	7, 41, 2, 2, 125, 130, 9, 4, 2, 2, 126, 130, 5, 25, 13, 2, 127, 130, 5,
	29, 15, 2, 128, 130, 5, 23, 12, 2, 129, 125, 3, 2, 2, 2, 129, 126, 3, 2,
	2, 2, 129, 127, 3, 2, 2, 2, 129, 128, 3, 2, 2, 2, 130, 133, 3, 2, 2, 2,
	131, 129, 3, 2, 2, 2, 131, 132, 3, 2, 2, 2, 132, 134, 3, 2, 2, 2, 133,
	131, 3, 2, 2, 2, 134, 135, 7, 41, 2, 2, 135, 34, 3, 2, 2, 2, 136, 138,
	9, 5, 2, 2, 137, 136, 3, 2, 2, 2, 138, 139, 3, 2, 2, 2, 139, 137, 3, 2,
	2, 2, 139, 140, 3, 2, 2, 2, 140, 36, 3, 2, 2, 2, 141, 142, 7, 47, 2, 2,
	142, 143, 5, 35, 18, 2, 143, 38, 3, 2, 2, 2, 144, 146, 9, 5, 2, 2, 145,
	144, 3, 2, 2, 2, 146, 147, 3, 2, 2, 2, 147, 145, 3, 2, 2, 2, 147, 148,
	3, 2, 2, 2, 148, 162, 3, 2, 2, 2, 149, 151, 9, 5, 2, 2, 150, 149, 3, 2,
	2, 2, 151, 154, 3, 2, 2, 2, 152, 150, 3, 2, 2, 2, 152, 153, 3, 2, 2, 2,
	153, 155, 3, 2, 2, 2, 154, 152, 3, 2, 2, 2, 155, 157, 7, 48, 2, 2, 156,
	158, 9, 5, 2, 2, 157, 156, 3, 2, 2, 2, 158, 159, 3, 2, 2, 2, 159, 157,
	3, 2, 2, 2, 159, 160, 3, 2, 2, 2, 160, 162, 3, 2, 2, 2, 161, 145, 3, 2,
	2, 2, 161, 152, 3, 2, 2, 2, 162, 40, 3, 2, 2, 2, 163, 164, 7, 47, 2, 2,
	164, 165, 5, 39, 20, 2, 165, 42, 3, 2, 2, 2, 166, 167, 9, 6, 2, 2, 167,
	44, 3, 2, 2, 2, 168, 169, 7, 37, 2, 2, 169, 170, 5, 43, 22, 2, 170, 171,
	5, 43, 22, 2, 171, 172, 5, 43, 22, 2, 172, 46, 3, 2, 2, 2, 173, 174, 7,
	37, 2, 2, 174, 175, 5, 43, 22, 2, 175, 176, 5, 43, 22, 2, 176, 177, 5,
	43, 22, 2, 177, 178, 5, 43, 22, 2, 178, 48, 3, 2, 2, 2, 179, 180, 7, 37,
	2, 2, 180, 181, 5, 43, 22, 2, 181, 182, 5, 43, 22, 2, 182, 183, 5, 43,
	22, 2, 183, 184, 5, 43, 22, 2, 184, 185, 5, 43, 22, 2, 185, 186, 5, 43,
	22, 2, 186, 50, 3, 2, 2, 2, 187, 188, 7, 37, 2, 2, 188, 189, 5, 43, 22,
	2, 189, 190, 5, 43, 22, 2, 190, 191, 5, 43, 22, 2, 191, 192, 5, 43, 22,
	2, 192, 193, 5, 43, 22, 2, 193, 194, 5, 43, 22, 2, 194, 195, 5, 43, 22,
	2, 195, 196, 5, 43, 22, 2, 196, 52, 3, 2, 2, 2, 197, 202, 5, 45, 23, 2,
	198, 202, 5, 47, 24, 2, 199, 202, 5, 49, 25, 2, 200, 202, 5, 51, 26, 2,
	201, 197, 3, 2, 2, 2, 201, 198, 3, 2, 2, 2, 201, 199, 3, 2, 2, 2, 201,
	200, 3, 2, 2, 2, 202, 54, 3, 2, 2, 2, 203, 204, 7, 99, 2, 2, 204, 205,
	7, 112, 2, 2, 205, 206, 7, 118, 2, 2, 206, 207, 7, 107, 2, 2, 207, 208,
	7, 99, 2, 2, 208, 209, 7, 110, 2, 2, 209, 210, 7, 107, 2, 2, 210, 211,
	7, 99, 2, 2, 211, 212, 7, 117, 2, 2, 212, 213, 7, 107, 2, 2, 213, 214,
	7, 112, 2, 2, 214, 215, 7, 105, 2, 2, 215, 56, 3, 2, 2, 2, 216, 217, 7,
	104, 2, 2, 217, 218, 7, 119, 2, 2, 218, 219, 7, 110, 2, 2, 219, 220, 7,
	110, 2, 2, 220, 58, 3, 2, 2, 2, 221, 222, 7, 118, 2, 2, 222, 223, 7, 103,
	2, 2, 223, 224, 7, 122, 2, 2, 224, 225, 7, 118, 2, 2, 225, 60, 3, 2, 2,
	2, 226, 227, 7, 112, 2, 2, 227, 228, 7, 113, 2, 2, 228, 229, 7, 112, 2,
	2, 229, 230, 7, 103, 2, 2, 230, 62, 3, 2, 2, 2, 231, 232, 7, 104, 2, 2,
	232, 233, 7, 107, 2, 2, 233, 234, 7, 110, 2, 2, 234, 235, 7, 110, 2, 2,
	235, 236, 7, 47, 2, 2, 236, 237, 7, 113, 2, 2, 237, 238, 7, 114, 2, 2,
	238, 239, 7, 99, 2, 2, 239, 240, 7, 101, 2, 2, 240, 241, 7, 107, 2, 2,
	241, 242, 7, 118, 2, 2, 242, 243, 7, 123, 2, 2, 243, 64, 3, 2, 2, 2, 244,
	245, 7, 104, 2, 2, 245, 246, 7, 107, 2, 2, 246, 247, 7, 110, 2, 2, 247,
	248, 7, 110, 2, 2, 248, 249, 7, 47, 2, 2, 249, 250, 7, 101, 2, 2, 250,
	251, 7, 113, 2, 2, 251, 252, 7, 110, 2, 2, 252, 253, 7, 113, 2, 2, 253,
	254, 7, 116, 2, 2, 254, 66, 3, 2, 2, 2, 13, 2, 117, 119, 129, 131, 139,
	147, 152, 159, 161, 201, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'canvas'", "'rgb('", "','", "')'", "'rgba('", "", "'{'", "'}'", "':'",
	"';'", "", "", "", "", "", "", "", "'antialiasing'", "'full'", "'text'",
	"'none'", "'fill-opacity'", "'fill-color'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "WS", "LBRACE", "RBRACE", "COLON", "SEMICOLON",
	"DQUOTED_STRING", "SQUOTED_STRING", "POSITIVE_INT", "NEGATIVE_INT", "POSITIVE_FLOAT",
	"NEGATIVE_FLOAT", "HEX", "PROP_ANTIALIASING", "PROP_ANTIALIASING_FULL",
	"PROP_ANTIALIASING_TEXT", "PROP_ANTIALIASING_NONE", "PROP_FILL_OPACITY",
	"PROP_FILL_COLOR",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "WS", "LBRACE", "RBRACE", "COLON",
	"SEMICOLON", "EBACKSLASH", "UNICODE", "EDQUOTE", "ESQUOTE", "DQUOTED_STRING",
	"SQUOTED_STRING", "POSITIVE_INT", "NEGATIVE_INT", "POSITIVE_FLOAT", "NEGATIVE_FLOAT",
	"HEX_CHAR", "HEX_3_DIGITS", "HEX_4_DIGITS", "HEX_6_DIGITS", "HEX_8_DIGITS",
	"HEX", "PROP_ANTIALIASING", "PROP_ANTIALIASING_FULL", "PROP_ANTIALIASING_TEXT",
	"PROP_ANTIALIASING_NONE", "PROP_FILL_OPACITY", "PROP_FILL_COLOR",
}

type MapCSSLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewMapCSSLexer(input antlr.CharStream) *MapCSSLexer {

	l := new(MapCSSLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "MapCSS.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// MapCSSLexer tokens.
const (
	MapCSSLexerT__0                   = 1
	MapCSSLexerT__1                   = 2
	MapCSSLexerT__2                   = 3
	MapCSSLexerT__3                   = 4
	MapCSSLexerT__4                   = 5
	MapCSSLexerWS                     = 6
	MapCSSLexerLBRACE                 = 7
	MapCSSLexerRBRACE                 = 8
	MapCSSLexerCOLON                  = 9
	MapCSSLexerSEMICOLON              = 10
	MapCSSLexerDQUOTED_STRING         = 11
	MapCSSLexerSQUOTED_STRING         = 12
	MapCSSLexerPOSITIVE_INT           = 13
	MapCSSLexerNEGATIVE_INT           = 14
	MapCSSLexerPOSITIVE_FLOAT         = 15
	MapCSSLexerNEGATIVE_FLOAT         = 16
	MapCSSLexerHEX                    = 17
	MapCSSLexerPROP_ANTIALIASING      = 18
	MapCSSLexerPROP_ANTIALIASING_FULL = 19
	MapCSSLexerPROP_ANTIALIASING_TEXT = 20
	MapCSSLexerPROP_ANTIALIASING_NONE = 21
	MapCSSLexerPROP_FILL_OPACITY      = 22
	MapCSSLexerPROP_FILL_COLOR        = 23
)
